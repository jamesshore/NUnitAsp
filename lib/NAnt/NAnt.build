<?xml version="1.0"?>
<project name="NAnt" default="test">
    <tstamp/>
    <property name="debug" value="true"/>
    <property name="project.name" value="nant"/>
    <property name="project.FormalName" value="NAnt"/>

    <property name="src.dir" value="src"/>
    <property name="build.dir" value="build"/>
    <property name="dist.dir" value="${project.name}"/>

    <property name="backup.name" value="..\${project.name}-backup-${tstamp.date}-${tstamp.time}.zip" />
    <property name="project.version" value="x.x"/>

    <target name="release-build" description="makes a release build, usage: 'nant release-build'">
        <property name="debug" value="false"/>

        <!-- Use script task to get this from AssemblyInfo.cs using a regular expression -->
        <script language="C#">
            <code><![CDATA[
            public static void ScriptMain(Project project) {
                string sourcePath = Path.Combine(project.BaseDirectory, Path.Combine(project.Properties["src.dir"], project.Properties["project.FormalName"]));
                string assemblyInfoFileName = Path.Combine(sourcePath, "AssemblyInfo.cs");
                StreamReader reader = File.OpenText(assemblyInfoFileName);

                try {
                    // Regular expression built with Regex: http://www.organicbit.com/regex/
                    Regex expression = new Regex(@"^\[assembly: AssemblyVersion\(\""([0-9]+)\.([0-9]+)");
                    string line = reader.ReadLine();
                    while (line != null) {
                        Match match = expression.Match(line);
                        if (match.Success) {
                            project.Properties["project.version"] = match.Result("$1.$2");
                            break;
                        }
                        //else {
						//	throw new Exception("Could not read version from AssemblyInfo.cs!");
                        //}
                        
                        line = reader.ReadLine();
                    }
                } finally {
                    // must remember to close the file or the compile may not work
                    reader.Close();
                }
            }
        ]]></code>
        </script>
        <property name="dist.name" value="${project.name}-src-${project.version}.zip"/>
        <echo message="Building ${project.name}-${project.version} (release)"/>
        <call target="clean"/>
        <call target="build"/>
    </target>

    <target name="clean" description="cleans up everything">
        <delete dir="${build.dir}" failonerror="false"/>
        <delete dir="${dist.dir}" failonerror="false"/>
        <delete file="${dist.name}" failonerror="false"/>
    </target>

    <target name="build" description="compiles the source code">
        <mkdir dir="${build.dir}"/>
        <!-- copy the assemblies required to build NAnt to the build folder -->
        <copy todir="${build.dir}">
            <fileset basedir="bin">
                <includes name="NDoc.Core.dll"/>
                <includes name="NDoc.Documenter.Msdn.dll"/>
                <includes name="NUnitCore.dll"/>
                <includes name="NZipLib.dll"/>
                <includes name="CollectionGen.dll"/>
            </fileset>
        </copy>

        <!-- compile NAnt.Core.dll -->
        <csc target="library" output="${build.dir}\${project.FormalName}.Core.dll" debug="${debug}" doc="${build.dir}\${project.FormalName}.Core.xml">
            <sources basedir="${src.dir}\${project.FormalName}">
                <includes name="**/*.cs"/>
                <excludes name="NAnt.cs"/>
            </sources>
            <references>
                <includes name="${build.dir}/NDoc.Core.dll"/>
                <includes name="${build.dir}/NDoc.Documenter.Msdn.dll"/>
                <includes name="${build.dir}/NUnitCore.dll"/>
                <includes name="${build.dir}/NZipLib.dll"/>
                <includes name="${build.dir}/CollectionGen.dll"/>
                <includes name="Microsoft.JScript.dll" asis="true"/>
            </references>
            <arg value="/nowarn:1591"/>
        </csc>

        <!-- compile NAnt.exe -->
        <csc target="exe" output="${build.dir}\${project.FormalName}.exe" debug="${debug}" doc="${build.dir}\${project.FormalName}.xml">
            <sources basedir="${src.dir}\${project.FormalName}">
                <includes name="AssemblyInfo.cs"/>
                <includes name="NAnt.cs"/>
            </sources>
            <references>
                <includes name="${build.dir}/${project.FormalName}.Core.dll"/>                
            </references>
            <arg value="/resource:${src.dir}\${project.FormalName}\xslt\projecthelp.xslt,Nant.xslt.projecthelp.xslt" />
            <arg value="/nowarn:1591"/>
        </csc>
        
        <!-- compile NAnt.Documenter.dll -->
        <csc target="library" output="${build.dir}\${project.FormalName}.Documenter.dll" debug="${debug}">
            <sources basedir="${src.dir}\${project.FormalName}.Documenter">
                <includes name="*.cs"/>               
            </sources>
            <references>
                <includes name="System.dll" match="false" />
                <includes name="System.Design.dll" />
                <includes name="System.Windows.Forms.dll" />
                <includes name="System.Xml.dll" />   
                
                <includes name="${build.dir}\NDoc.Core.dll" />
            </references>
            <arg value="/resource:${src.dir}\${project.FormalName}.Documenter\css\NAntDoc.css,Documenter.css.NAntDoc.css" />
            <arg value="/resource:${src.dir}\${project.FormalName}.Documenter\html\index.html,Documenter.html.index.html" />
            <arg value="/resource:${src.dir}\${project.FormalName}.Documenter\html\NAntTaskRef.html,Documenter.html.NAntTaskRef.html" />
            <arg value="/resource:${src.dir}\${project.FormalName}.Documenter\xslt\tags.xslt,Documenter.xslt.tags.xslt" />
            <arg value="/resource:${src.dir}\${project.FormalName}.Documenter\xslt\task-doc.xslt,Documenter.xslt.task-doc.xslt" />
            <arg value="/resource:${src.dir}\${project.FormalName}.Documenter\xslt\task-index.xslt,Documenter.xslt.task-index.xslt" />
        </csc>
        
        <!-- compile NAnt.Tests.dll -->
        <csc target="library" output="${build.dir}\${project.FormalName}.Tests.dll" debug="${debug}">
            <sources basedir="${src.dir}\${project.FormalName}.Tests">
                <includes name="**/*.cs"/>
                <!-- these tests should not be run during integration because they use third party network resources -->
                <excludes name="**/GetTaskTest.cs"/>
                <excludes name="**/MailTaskTest.cs"/>
            </sources>
            <references>
                <includes name="${build.dir}/NUnitCore.dll"/>
                <includes name="${build.dir}/${project.FormalName}.Core.dll"/>
                <includes name="${build.dir}/${project.FormalName}.exe"/>
            </references>
        </csc>
    </target>

    <target name="buildextras" description="compiles projects in src\Extras">
        <!-- compile extras folder (but only if we are not doing a debug build) -->
        <nant buildfile="${src.dir}/Extras/BuildServer/BuildServer.build"/>
        <nant buildfile="${src.dir}/Extras/SourceSafe/SourceSafe.build"/>
    </target>

    <!--
        Perform unit tests.  If a unit test fails, the build fails.
        The base directory is set to the Test directory so that tests can easily
        load external data files wihtout having to worry about complicated paths.
        
        NOTE: The tests are run from the newly built nant version.
    -->
    <target name="test"  depends="build" description="run unit tests">
		<!-- call the newly built executable and tests it. -->
		<echo message="********************************************************************"/>
		<echo message="** Running newly built NAnt.exe with tests."/>
		<exec program="${build.dir}\${project.FormalName}.exe" commandline="-indent:1 -buildfile:${nant.project.buildfile} test.nunit"/>
		<echo message="** End of Tests"/>
		<echo message="********************************************************************"/>
    </target>
    
    <!-- Called from above target only.-->
    <target name="test.nunit" description="Do Not Call Directly">
        <nunit basedir="${src.dir}\${project.FormalName}.Tests" verbose="false" haltonerror="true" haltonfailure="true">
            <formatter type="Xml"/>
            <formatter type="Plain"/>
            <test class="SourceForge.NAnt.Tests.AllTests" assembly="${build.dir}\${project.FormalName}.Tests.dll" outfile="${build.dir}\${project.FormalName}.Tests.Results" />
        </nunit>
    </target>

	<target name="examples" depends="build" description="Build Examples">
		<nant buildfile="examples\examples.build" target="build"/>
	</target>
	
    <target name="doc" depends="build" description="build documentation">
        <echo message="Requires HtmlHelp compiler (hhc.exe) to be in the system path"/>
        <ndoc failonerror="false">
            <assemblies basedir="${build.dir}">
                <includes name="NAnt.exe"/>
                <includes name="NAnt.Core.dll"/>
            </assemblies>
            <documenters>
                <documenter name="MSDN">
                    <property name="OutputDirectory" value="${build.dir}\docs\MSDN" />
                    <property name="HtmlHelpName" value="NAnt" />
                    <property name="HtmlHelpCompilerFilename" value="hhc.exe" />
                    <property name="IncludeFavorites" value="False" />
                    <property name="Title" value="An NDoc Documented Class Library" />
                    <property name="SplitTOCs" value="False" />
                    <property name="DefaulTOC" value="" />
                    <property name="ShowVisualBasic" value="True" />
                    <property name="ShowMissingSummaries" value="True" />
                    <property name="ShowMissingRemarks" value="True" />
                    <property name="ShowMissingParams" value="True" />
                    <property name="ShowMissingReturns" value="True" />
                    <property name="ShowMissingValues" value="True" />
                    <property name="DocumentInternals" value="False" />
                    <property name="DocumentProtected" value="True" />
                    <property name="DocumentPrivates" value="False" />
                    <property name="DocumentEmptyNamespaces" value="False" />
                    <property name="IncludeAssemblyVersion" value="False" />
                    <property name="CopyrightText" value="" />
                    <property name="CopyrightHref" value="" />
                 </documenter>             
            </documenters> 
        </ndoc>
        <copy file="${build.dir}/docs/MSDN/NAnt.chm" todir="${build.dir}"/>
    </target>

    <target name="userdoc" depends="build" description="build documentation">
		<!-- copy required files for task documentation -->
        <copy file="doc\style.css" todir="${build.dir}\docs" />
        <copy file="doc\arrow.gif" todir="${build.dir}\docs\images" />

		<ndoc>
            <assemblies basedir="${build.dir}">
                <includes name="NAnt.Core.dll"/>
            </assemblies>
            <documenters>
                <documenter name="NAntTask">
                    <property name="OutputDirectory" value="${build.dir}\docs\tasks" />
                    <property name="ShowMissingSummaries" value="False" />
                    <property name="ShowMissingRemarks" value="False" />
                    <property name="ShowMissingParams" value="False" />
                    <property name="ShowMissingReturns" value="False" />
                    <property name="ShowMissingValues" value="False" />
                    <property name="DocumentInternals" value="True" />
                    <property name="DocumentProtected" value="True" />
                    <property name="DocumentPrivates" value="True" />
                    <property name="DocumentEmptyNamespaces" value="False" />
                    <property name="IncludeAssemblyVersion" value="False" />
                    <property name="CopyrightText" value="" />
                    <property name="CopyrightHref" value="" />
                </documenter>
            </documenters> 
        </ndoc>
    </target>

    <target name="backup" depends="clean" description="make local backup">
        <echo message="Creating backup ${backup.name}"/>
        <zip zipfile="${backup.name}">
            <fileset basedir=".">
                <includes name="**"/>
            </fileset>
        </zip>
    </target>

    <target name="dist" description="create release distribution: usage nant dist">
        <!-- build a clean release distribution for release -->
        <property name="debug" value="false"/>
        <echo message="Debug = ${debug}"/>

        <call target="clean"/>
        <call target="release-build"/>
        <call target="test"/>

        <copy file="${build.dir}\NAnt.exe" todir="${dist.dir}\bin"/>
        <copy file="${build.dir}\NAnt.xml" todir="${dist.dir}\bin"/>

        <!-- build developer documentation -->
        <call target="doc"/>
        <copy file="${build.dir}\NAnt.chm" todir="${dist.dir}\doc"/>

        <copy todir="${dist.dir}">
            <fileset>
                <includes name="bin/**"/>
                <includes name="doc/**"/>
                <includes name="src/**"/>
                <!-- start: exclude VS.Net stuff -->
                <excludes name="src/NAnt/bin/**"/>
                <excludes name="src/NAnt/obj/**"/>
                <!-- end: exclude VS.Net stuff -->
                <includes name="examples/**"/>
                <includes name="NAnt.build"/>
                <includes name="NAnt.key"/>
                <includes name="README.txt"/>
                <includes name="COPYING.txt"/>
            </fileset>
        </copy>

        <delete file="${dist.name}" failonerror="false"/>
        <zip zipfile="${dist.name}">
            <fileset basedir="${dist.dir}">
                <includes name="**"/>
            </fileset>
        </zip>

    </target>

</project>